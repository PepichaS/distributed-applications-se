@using RentACar.ViewModels.Shared
@model PagingVM
<nav aria-label="..." class="">
    <ul class="pagination justify-content-center">
        <li style="margin-right:5px">
            <form id="paginationForm" asp-controller="@this.Context.Request.RouteValues["controller"].ToString()" asp-action="@Context.Request.RouteValues["action"].ToString()" method="post">
                <select asp-for="ItemsPerPage" class="form-control border-dark" onchange="changeItemsPerPage();">
                    <option value="5" class="option text-dark  bg-warning">5</option>
                    <option value="10" class="option text-dark bg-warning">10</option>
                    <option value="20" class="option text-dark bg-warning">20</option>
                    <option value="30" class="option text-dark bg-warning">30</option>
                    <option value="50" class="option text-dark bg-warning">50</option>
                </select>
                <input type="submit" id="loginSubmit" style="visibility:hidden" />
            </form>
        </li>
        <li></li>
        <li class="page-item @if (!Model.HasPreviousPage) {<text>disabled</text>}">
            <a class="page-link" asp-action="@Model.Action" asp-route-page="@Model.PreviousPageNumber" asp-route-itemsPerPage="@Model.ItemsPerPage">
                <i class="fas fa-step-backward"></i>
            </a>
        </li>
        @for (int i = Model.Page - 2; i < Model.Page; i++)
        {
            if (i > 0)
            {
                <li class="page-item "><a class="page-link bg-warning text-white" asp-action="@Model.Action" asp-route-page="@i" asp-route-itemsPerPage="@Model.ItemsPerPage">@i</a></li>
            }
        }
        <li class="page-item active" aria-current="page">
            <span class="page-link bg-dark border-dark">
                @Model.Page
                <span class="sr-only">(current)</span>
            </span>
        </li>
        @for (int i = Model.Page + 1; i <= Model.Page + 2; i++)
        {
            if (i <= Model.PagesCount)
            {
                <li class="page-item"><a class="page-link bg-warning text-white" asp-action="@Model.Action" asp-route-page="@i" asp-route-itemsPerPage="@Model.ItemsPerPage">@i</a></li>
            }
        }
        <li class="page-item @if(!Model.HasNextPage){<text>disabled</text>}">
            <a class="page-link" asp-action="@Model.Action" asp-route-page="@Model.NextPageNumber" asp-route-itemsPerPage="@Model.ItemsPerPage">
                <i class="fas fa-step-forward"></i>
            </a>
        </li>
    </ul>
</nav>

<script type="text/javascript">
    function changeItemsPerPage() {
        console.log('Items per page changed!')
        document.getElementById('loginSubmit').click();
    }

    // Get the form element and update its "asp-action" attribute value to the current page's action name
    var paginationForm = document.getElementById('paginationForm');
    var currentAction = '@ViewContext.RouteData.Values["action"]';
    paginationForm.setAttribute('asp-action', currentAction);
</script>